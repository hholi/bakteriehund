{"version":3,"sources":["LanguageToggle.js","hovedlogo.svg","fms_logo.svg","unn_logo.svg","Bottom.js","photos/bh1.jpg","photos/bh2.jpg","photos/bh3.jpg","photos/bh4.jpg","Photos.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["withLocalize","languages","activeLanguage","setActiveLanguage","className","filter","lang","map","onClick","code","name","Component","Bottom","Photos","React","constructor","props","context","super","this","handleSelect","bind","state","selectedIndex","e","setState","index","direction","render","onSelect","interval","Item","width","height","alt","src","photo1","Caption","photo2","photo3","photo4","Main","initialize","translation","translations","options","defaultLanguage","renderToStaticMarkup","bh_logo","id","align","href","App","Route","path","component","document","getElementById","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f4b65e6.chunk.js","sourcesContent":["import React from \"react\";\nimport { withLocalize } from \"react-localize-redux\";\nimport './LanguageToggle.css'\n\nconst LanguageToggle = ({ languages, activeLanguage, setActiveLanguage }) => (\n  <ul className=\"selector\">\n    {languages.filter((lang) => {return lang !== activeLanguage;}).map(lang => (\n      <li key={lang.code}>\n        <button onClick={() => setActiveLanguage(lang.code)}>\n          {lang.name}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default withLocalize(LanguageToggle);\n","export default __webpack_public_path__ + \"static/media/hovedlogo.94e7be08.svg\";","export default __webpack_public_path__ + \"static/media/fms_logo.a567319b.svg\";","export default __webpack_public_path__ + \"static/media/unn_logo.bd917c2a.svg\";","import React, { Component } from 'react';\nimport fms_logo from './fms_logo.svg';\nimport unn_logo from './unn_logo.svg';\nimport bh_logo from './hovedlogo.svg';\nimport './Bottom.css';\n\nclass Bottom extends Component {\n\n    render() {\n        return (\n          <div>\n            <div className=\"Bottom\">\n            <img src={unn_logo} className=\"Bottom-logo-unn\" alt=\"logo\" />\n            <img src={bh_logo} className=\"Bottom-logo-bh\" alt=\"logo\" />\n            <img src={fms_logo} className=\"Bottom-logo-fms\" alt=\"logo\" />\n            </div>\n          </div>\n        );\n      }\n\n}\n\nexport default Bottom;\n","export default __webpack_public_path__ + \"static/media/bh1.bb7df885.jpg\";","export default __webpack_public_path__ + \"static/media/bh2.26428e92.jpg\";","export default __webpack_public_path__ + \"static/media/bh3.e8e87ccc.jpg\";","export default __webpack_public_path__ + \"static/media/bh4.3da8cd25.jpg\";","import React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/lib/Carousel';\nimport photo1 from './photos/bh1.jpg';\nimport photo2 from './photos/bh2.jpg';\nimport photo3 from './photos/bh3.jpg';\nimport photo4 from './photos/bh4.jpg';\nimport './Photos.css';\n\nclass Photos extends React.Component {\n\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleSelect = this.handleSelect.bind(this);\n  \n      this.state = {\n        // index: 0,\n        // direction: null\n      };\n    }\n  \n    handleSelect(selectedIndex, e) {\n    //   alert(`selected=${selectedIndex}, direction=${e.direction}`);\n      this.setState({\n        index: selectedIndex,\n        direction: e.direction\n      });\n    }\n  \n    render() {\n      const { index, direction } = this.state;\n  \n      return (\n        <Carousel\n        //   activeIndex={index}\n          direction={direction}\n          onSelect={this.handleSelect}\n          interval={6000}\n        >\n          <Carousel.Item>\n            <img width={900} height={500} alt=\"900x500\" src={photo1} />\n            <Carousel.Caption>\n              <h3></h3>\n              <p></p>\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img width={900} height={500} alt=\"900x500\" src={photo2} />\n            <Carousel.Caption>\n              <h3></h3>\n              <p></p>\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img width={900} height={500} alt=\"900x500\" src={photo3} />\n            <Carousel.Caption>\n              <h3></h3>\n              <p></p>\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img width={900} height={500} alt=\"900x500\" src={photo4} />\n            <Carousel.Caption>\n              <h3></h3>\n              <p></p>\n            </Carousel.Caption>\n          </Carousel.Item>\n        </Carousel>\n      );\n    }\n  }\n  \n\nexport default Photos;\n","import React, { Component } from 'react';\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { withLocalize } from \"react-localize-redux\";\nimport translations from \"./translations.json\";\nimport LanguageToggle from './LanguageToggle';\nimport { Translate } from \"react-localize-redux\";\nimport bh_logo from './hovedlogo.svg';\nimport './Main.css';\nimport Bottom from './Bottom';\nimport Photos from './Photos';\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.props.initialize({\n      languages: [\n        { name: \"no\", code: \"no\" },\n        { name: \"en\", code: \"en\" },\n      ],\n      translation: translations,\n      options: {  defaultLanguage: \"no\", renderToStaticMarkup }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"left-margin\"/>\n        <div className=\"LanguageSelect\">\n          <LanguageToggle />            \n        </div>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={bh_logo} className=\"App-logo\" alt=\"logo\" />\n            <p></p>\n            <p></p>\n            <p><Translate id='project.title'></Translate></p>\n          </header>\n          <Photos/>\n          <div className=\"App-info\">\n            <p><Translate id='project.info1'/></p>\n            <p><Translate id='project.info2'/></p>\n          </div>\n          <div  className=\"App-proj\" align=\"left\">\n            <p><Translate id='project.contrib'></Translate></p>\n            <p><Translate id='project.mk1'/></p>\n            <p><Translate id='project.amh1'/></p>\n            <p><Translate id='project.ama'/></p>\n            <p><Translate id='project.jn'/></p>\n          </div>\n          <div> \n            \n          </div>\n          <div>\n            <p className=\"App-dark\"><Translate id='wheel.text5'/></p>\n            <p className=\"App-separator\"><Translate id='objective.conclusion'/></p>\n          </div>\n          <div className=\"App-contributors\">\n            <p><a href=\"mailto:merethe.kumle@bakteriehund.no\">Merethe Kumle</a>, <Translate id='project.mk'/></p>\n            <p><a href=\"mailto:anne.marit.hagen@bakteriehund.no\">Anne Marit Hagen</a>, <Translate id='project.amh'/></p>\n          </div>\n        <div>\n        </div>\n        {/* <Bottom/> */}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withLocalize(Main);\n","import React, { Component }  from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { LocalizeProvider } from \"react-localize-redux\";\nimport Main from \"./Main\";\n\n// class App extends Component {\n//   render() {\n//     return(\n//         <LocalizeProvider>\n//           <Router>\n//             <Route path=\"/\" component={Main} />\n//           </Router>\n//         </LocalizeProvider>\n//       );\n//     }\n// }\n//TODO: bytt til øverste måte når det fungerer\n\nconst App = props => (\n  <LocalizeProvider>\n    <Router>\n      <Route path=\"/\" component={Main} />\n    </Router>\n  </LocalizeProvider>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}